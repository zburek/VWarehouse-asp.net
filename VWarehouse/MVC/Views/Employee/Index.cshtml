@model PagedList.IPagedList<Model.Common.IEmployee>
@using PagedList.Mvc;
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />
    @{
        ViewBag.Title = "Index";
    }

    <h2>Index</h2>

    <a href="@Url.Action("Create")"
       class="btn btn-success">
        <span class="glyphicon glyphicon-plus"></span> New Employee
    </a>
@using (Html.BeginForm("Index", "Employee", FormMethod.Get))
{
    <p>
        Search by Employee Name: @Html.TextBox("SearchString", ViewBag.CurrentFilter as string)
        <input type="submit" value="Search" />
    </p>
}
<div style="height: 350px">
    <table class="table">
        <tr>
            <th>
                ID
            </th>
            <th>
                @Html.ActionLink("Name", "Index", new { sortOrder = ViewBag.NameSortParm, currentFilter = ViewBag.CurrentFilter })
            </th>
            <th>
                Phone Number
            </th>
            <th></th>
        </tr>

        @foreach (var emp in Model)
        {
            <tr>
                <td width="150">
                    @Html.DisplayFor(model => emp.ID)
                </td>
                <td width="150">
                    @Html.DisplayFor(model => emp.Name)
                </td>
                <td width="150">
                    @Html.DisplayFor(model => emp.PhoneNumber)
                </td>
                <td>
                    @Html.ActionLink("Edit", "Edit", new { id = emp.ID }, new { @class = "btn btn-success" })
                    @Html.ActionLink("Details", "Details", new { id = emp.ID }, new { @class = "btn btn-primary" })
                    @Html.ActionLink("Inventory", "Inventory", new { id = emp.ID }, new { @class = "btn btn-primary" })
                    @Html.ActionLink("Delete", "Delete", new { id = emp.ID }, new { @class = "btn btn-danger" })
                </td>

            </tr>
        }

    </table>
</div>

Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

@Html.PagedListPager(Model, page => Url.Action("Index",
    new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))